IntArrayList.cs (104) : for(int i = 0; i < NumElements; i++)
ArrayList.cs (77) : for(int i = index ;i < NumElements - 1; i++)
List.cs (9) : //public ListNode<T> Previous = null;
List.cs (78) : if (First == null)
List.cs (79) : {
List.cs (82) : Last = First;
List.cs (83) : m_numItems++;
List.cs (85) : }
List.cs (86) : else if (Last == null)
List.cs (87) : {
List.cs (117) : //Last = Last.Previous;
List.cs (132) : //Last = Last.Previous;
Stack.cs (29) : Values.Add(value);
Stack.cs (31) : // List<T> nueva = new List<T>();
Stack.cs (32) : //   nueva.Add(value);
Stack.cs (35) : //  foreach (T v in Values)
Stack.cs (36) : //  {
Stack.cs (37) : //     nueva.Add(v);
Stack.cs (38) : //  }
Stack.cs (41) : //  Values = nueva;
Stack.cs (45) : // T elem = Values.Remove(0);
Stack.cs (46) : // return elem;
Stack.cs (47) : T Borrado = Values.Get(Values.Count() - 1);
Stack.cs (48) : Values.Remove(Values.Count() - 1);
Stack.cs (49) : return Borrado;
