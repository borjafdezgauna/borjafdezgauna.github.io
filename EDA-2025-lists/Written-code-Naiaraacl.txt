IntList.cs (3) : using System.Xml;
IntList.cs (66) : IntListNode node = First;
IntList.cs (73) : {
IntList.cs (74) : node = node.Next;
IntList.cs (75) : }
IntList.cs (84) : IntListNode newNode = new IntListNode(value);
IntList.cs (85) : if (First == null)
IntList.cs (86) : {
IntList.cs (87) : First = newNode;
IntList.cs (88) : return;
IntList.cs (89) : }
IntList.cs (90) : IntListNode node = First;
IntList.cs (91) : while (node.Next != null)
IntList.cs (92) : {
IntList.cs (93) : node = node.Next;
IntList.cs (94) : }
IntList.cs (95) : node.Next = newNode;
IntList.cs (103) : IntListNode node = First;
IntList.cs (113) : {
IntList.cs (118) : }
IntList.cs (120) : {
IntList.cs (131) : }
IntList.cs (155) : IntListNode node = First;
ArrayList.cs (2) : using System.Runtime.CompilerServices;
ArrayList.cs (22) : int count = NumElements;
ArrayList.cs (24) : for (int i = 0; i < count; i++)
ArrayList.cs (25) : output += Values[i].ToString() + ",";
ArrayList.cs (26) : output = output.TrimEnd(',') + "] " + count + " elements";
ArrayList.cs (36) : return NumElements;
ArrayList.cs (43) : if (index < 0 || index >= NumElements)
ArrayList.cs (44) : {
ArrayList.cs (46) : }
ArrayList.cs (48) : return Values[index];
ArrayList.cs (56) : if (Values.Length == NumElements)
ArrayList.cs (57) : {
ArrayList.cs (58) : Resize(Values.Length * 2);
ArrayList.cs (59) : }
ArrayList.cs (60) : Values[NumElements] = value;
ArrayList.cs (61) : NumElements++;
ArrayList.cs (70) : if (index < 0 || index >= NumElements)
ArrayList.cs (71) : {
ArrayList.cs (73) : }
ArrayList.cs (74) : T removed = Values[index];
ArrayList.cs (75) : for (int i = index; i < NumElements - 1; i++)
ArrayList.cs (76) : {
ArrayList.cs (77) : Values[i] = Values[i + 1];
ArrayList.cs (78) : }
ArrayList.cs (79) : NumElements--;
ArrayList.cs (80) : Values[NumElements] = default(T);
ArrayList.cs (81) : return removed;
ArrayList.cs (87) : for (int i = 0; i < NumElements; i++)
ArrayList.cs (88) : {
ArrayList.cs (89) : Values[i] = default(T);
ArrayList.cs (90) : }
ArrayList.cs (91) : NumElements = 0;
ArrayList.cs (98) : T[] Ampliacion = new T[newSize];
ArrayList.cs (100) : for (int i = 0; i < NumElements; i++)
ArrayList.cs (101) : {
ArrayList.cs (102) : Ampliacion[i] = Values[i];
ArrayList.cs (103) : }
ArrayList.cs (104) : Values = Ampliacion;
ArrayList.cs (110) : for (int i = 0; i< NumElements; i++)
ArrayList.cs (111) : {
ArrayList.cs (112) : yield return Values[i];
ArrayList.cs (113) : }
List.cs (4) : using System.Xml;
List.cs (96) : ListNode<T> node = First;
List.cs (98) : {
List.cs (100) : }
List.cs (130) : for (int i = 0; i < index - 1; i++)
List.cs (131) : {
List.cs (132) : node = node.Next;
List.cs (133) : }
List.cs (141) : {
List.cs (143) : }
List.cs (153) : First = null;
List.cs (161) : ListNode<T> node = First;
List.cs (162) : while (node != null)
List.cs (163) : {
List.cs (164) : yield return node.Value;
List.cs (165) : node = node.Next;
List.cs (166) : }
