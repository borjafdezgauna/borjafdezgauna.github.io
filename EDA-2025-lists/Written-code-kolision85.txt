IntList.cs (43) : int count = 0;
IntList.cs (44) : IntListNode node = First;
IntList.cs (46) : while (node != null)
IntList.cs (47) : {
IntList.cs (48) : count++;
IntList.cs (49) : node = node.Next;
IntList.cs (50) : }
IntList.cs (51) : return count;
IntList.cs (59) : int element = 0;
IntList.cs (60) : IntListNode node = First;
IntList.cs (62) : if(node == null)
IntList.cs (63) : {
IntList.cs (65) : }
IntList.cs (66) : else
IntList.cs (67) : {
IntList.cs (68) : while (node != null)
IntList.cs (69) : {
IntList.cs (70) : if(node == index)
IntList.cs (71) : {
IntList.cs (72) : element = node.value;
IntList.cs (73) : return element;
IntList.cs (74) : }
IntList.cs (75) : node = node.Next;
IntList.cs (76) : }
IntList.cs (77) : }
IntList.cs (86) : int element = 0;
IntList.cs (87) : bool anadido = false;
IntList.cs (88) : IntListNode node = First;
IntList.cs (90) : while (node != null && anadido)
IntList.cs (91) : {
IntList.cs (92) : if(node.Next == null)
IntList.cs (93) : {
IntList.cs (94) : node.next.value = value;
IntList.cs (95) : anadido = true;
IntList.cs (96) : }
IntList.cs (97) : node = node.Next;
IntList.cs (98) : }
IntList.cs (99) : }
IntList.cs (108) : int element = 0;
IntList.cs (109) : IntListNode node
IntList.cs (111) : if(node == null)
IntList.cs (112) : {
IntList.cs (113) : return -1;
IntList.cs (114) : }
IntList.cs (115) : else
IntList.cs (116) : {
IntList.cs (117) : while (node != null)
IntList.cs (118) : {
IntList.cs (119) : if(node == index)
IntList.cs (120) : {
IntList.cs (121) : element = node.value;
IntList.cs (122) : node.value == null;
IntList.cs (123) : return element;
IntList.cs (124) : }
IntList.cs (125) : node = node.Next;
IntList.cs (126) : }
IntList.cs (127) : }
