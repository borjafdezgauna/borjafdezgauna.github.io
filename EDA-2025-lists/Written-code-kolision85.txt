IntList.cs (3) : using System.Diagnostics;
IntList.cs (4) : using System.Security.AccessControl;
IntList.cs (45) : int count = 0;
IntList.cs (46) : IntListNode node = First;
IntList.cs (48) : while (node != null)
IntList.cs (49) : {
IntList.cs (50) : count++;
IntList.cs (51) : node = node.Next;
IntList.cs (52) : }
IntList.cs (53) : return count;
IntList.cs (61) : int counter = 0;
IntList.cs (62) : int element = 0;
IntList.cs (63) : IntListNode node = First;
IntList.cs (65) : if (node != null)
IntList.cs (66) : {
IntList.cs (67) : while (node != null)
IntList.cs (68) : {
IntList.cs (69) : if (counter == index)
IntList.cs (70) : {
IntList.cs (71) : element = node.Value;
IntList.cs (72) : return element;
IntList.cs (73) : }
IntList.cs (74) : node = node.Next;
IntList.cs (75) : counter++;
IntList.cs (76) : }
IntList.cs (77) : }
IntList.cs (78) : return 0;
IntList.cs (87) : IntListNode node = new IntListNode(value);
IntList.cs (88) : if (First == null)
IntList.cs (89) : {
IntList.cs (90) : First = node;
IntList.cs (91) : }
IntList.cs (92) : else
IntList.cs (93) : {
IntList.cs (94) : IntListNode actual = First;
IntList.cs (95) : while (actual.Next != null)
IntList.cs (96) : {
IntList.cs (97) : actual = actual.Next;
IntList.cs (98) : }
IntList.cs (99) : actual.Next = node;
IntList.cs (100) : }
IntList.cs (108) : int element = 0;
IntList.cs (109) : IntListNode node = First;
IntList.cs (111) : if (index < 0 || index > Count() || First == null)
IntList.cs (112) : {
IntList.cs (113) : return -1;
IntList.cs (114) : }
IntList.cs (115) : else if (index == 0)
IntList.cs (116) : {
IntList.cs (117) : element = First.Value;
IntList.cs (118) : First = First.Next;
IntList.cs (119) : return element;
IntList.cs (120) : }
IntList.cs (121) : else
IntList.cs (122) : {
IntList.cs (124) : for (int i = 0; i < index - 1; i++)
IntList.cs (125) : {
IntList.cs (126) : if (node.Next == null)
IntList.cs (127) : {
IntList.cs (128) : return -1;
IntList.cs (129) : }
IntList.cs (130) : node = node.Next;
IntList.cs (133) : }
IntList.cs (134) : if (node.Next == null)
IntList.cs (135) : {
IntList.cs (136) : return -1;
IntList.cs (138) : element = node.Next.Value;
IntList.cs (139) : node.Next = node.Next.Next;
IntList.cs (140) : }
IntList.cs (141) : return element;
IntList.cs (142) : }
IntList.cs (148) : First = null;
IntList.cs (155) : IntListNode node = First;
IntList.cs (156) : while (node != null)
IntList.cs (157) : {
IntList.cs (158) : yield return node.Value;
IntList.cs (159) : node = node.Next;
IntList.cs (160) : }
