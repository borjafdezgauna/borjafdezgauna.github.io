IIntList.cs (1) : using System;
IIntList.cs (3) : using System.Text;
IIntList.cs (7) : public interface IIntList : System.Collections.IEnumerable
IIntList.cs (9) : int Count();
IIntList.cs (11) : int Get(int index);
IIntList.cs (13) : void Add(int value);
IIntList.cs (15) : int Remove(int index);
IIntList.cs (17) : void Clear();
IIntList.cs (19) : }
IntList.cs (43) : int count = 0;
IntList.cs (44) : IntListNode newNode = First;
IntList.cs (45) : while (newNode != null)
IntList.cs (46) : {
IntList.cs (47) : newNode = newNode.Next;
IntList.cs (48) : count++;
IntList.cs (50) : }
IntList.cs (51) : return count;
IntList.cs (61) : {
IntList.cs (72) : }
IntList.cs (75) : IntListNode newNode = First;
IntList.cs (76) : int found = 0;
IntList.cs (77) : int i = 0;
IntList.cs (82) : while (newNode != null && i > index)
IntList.cs (83) : {
IntList.cs (84) : newNode = newNode.Next;
IntList.cs (85) : i++;
IntList.cs (86) : }
IntList.cs (89) : found = newNode.Next.Value;
IntList.cs (90) : }
IntList.cs (91) : }
IntList.cs (109) : }
IntList.cs (112) : IntListNode newNode = First;
IntList.cs (113) : int i = 0;
IntList.cs (116) : newNode = newNode.Next;
IntList.cs (117) : i++;
IntList.cs (118) : }
IntList.cs (121) : IntListNode newNode1 = new IntListNode(value);
IntList.cs (123) : }
IntList.cs (136) : }
IntList.cs (153) : }
IntList.cs (166) : IntListNode newNode = First;
IntList.cs (168) : {
IntList.cs (170) : newNode = newNode.Next;
IntList.cs (172) : }
Stack.cs (2) : using System.ComponentModel.Design;
Stack.cs (37) : if (Elements.Count() == 0)
Stack.cs (38) : {
Stack.cs (39) : return default(T);
Stack.cs (40) : }
Stack.cs (41) : else
Stack.cs (42) : {
Stack.cs (43) : int last = Elements.Count() - 1;
Stack.cs (44) : T dlet = Elements.Get(last);
Stack.cs (45) : Elements.Remove(last);
Stack.cs (46) : return dlet;
Stack.cs (47) : }
