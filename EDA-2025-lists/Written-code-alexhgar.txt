IntList.cs (47) : while (node != null)
IntList.cs (65) : int contador = 0;
IntList.cs (68) : node = node.Next;
IntList.cs (69) : contador++;
IntList.cs (78) : return node.Value;
IntList.cs (87) : IntListNode addedNode = new IntListNode(value);
IntList.cs (89) : if (First == null)
IntList.cs (90) : {
IntList.cs (91) : First = addedNode;
IntList.cs (93) : return;
IntList.cs (95) : }
IntList.cs (98) : while (node.Next != null)
IntList.cs (99) : {
IntList.cs (100) : node = node.Next;
IntList.cs (102) : }
IntList.cs (104) : node.Next = addedNode;
IntList.cs (105) : return;
IntList.cs (115) : IntListNode node = First;
IntList.cs (116) : int contador = 0;
IntList.cs (119) : {
IntList.cs (120) : return -1;
IntList.cs (121) : }
IntList.cs (123) : if (index == 0)
IntList.cs (124) : {
IntList.cs (125) : int primerValor = node.Value;
IntList.cs (127) : First = node.Next;
IntList.cs (128) : return primerValor;
IntList.cs (129) : }
IntList.cs (132) : {
IntList.cs (133) : node = node.Next;
IntList.cs (134) : contador++;
IntList.cs (135) : }
IntList.cs (138) : {
IntList.cs (142) : int eliminado = node.Next.Value;
IntList.cs (143) : node.Next = node.Next.Next;
IntList.cs (144) : return eliminado;
IntList.cs (153) : First = null;
IntList.cs (159) : IntListNode node = First;
IntList.cs (161) : while (node != null)
IntList.cs (162) : {
IntList.cs (163) : yield return node.Value;
IntList.cs (164) : node = node.Next;
IntList.cs (166) : }
