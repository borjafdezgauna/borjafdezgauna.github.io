IntArrayList.cs (36) : return NumElements;
IntArrayList.cs (44) : if (index < NumElements && index >= 0)
IntArrayList.cs (45) : {
IntArrayList.cs (46) : return Values[index];
IntArrayList.cs (47) : }
IntArrayList.cs (48) : else
IntArrayList.cs (49) : {
IntArrayList.cs (51) : }
IntArrayList.cs (58) : if (NumElements == Values.Length)
IntArrayList.cs (59) : {
IntArrayList.cs (60) : Resize(2 * Values.Length);
IntArrayList.cs (61) : Values[NumElements] = value;
IntArrayList.cs (62) : NumElements++;
IntArrayList.cs (65) : }
IntArrayList.cs (66) : else
IntArrayList.cs (67) : {
IntArrayList.cs (68) : Values[NumElements] = value;
IntArrayList.cs (69) : NumElements++;
IntArrayList.cs (70) : }
IntArrayList.cs (80) : if (index >= NumElements || index < 0)
IntArrayList.cs (81) : {
IntArrayList.cs (82) : return -1;
IntArrayList.cs (83) : }
IntArrayList.cs (84) : else
IntArrayList.cs (85) : {
IntArrayList.cs (86) : int valor = Values[index];
IntArrayList.cs (87) : for (int i = index; i < NumElements - 1; i++)
IntArrayList.cs (88) : {
IntArrayList.cs (89) : Values[i] = Values[i + 1];
IntArrayList.cs (90) : }
IntArrayList.cs (91) : NumElements=NumElements - 1;
IntArrayList.cs (92) : return valor;
IntArrayList.cs (93) : }
IntArrayList.cs (102) : NumElements = 0;
IntArrayList.cs (107) : //TODO #11: crea una matriz de un tamaÃ±o mayor para poder seguir metiendo numeros
IntArrayList.cs (108) : int[] rematriz = new int[newSize];
IntArrayList.cs (109) : for (int i = 0; i < NumElements; i++)
IntArrayList.cs (110) : {
IntArrayList.cs (111) : rematriz[i] = Values[i];
IntArrayList.cs (112) : }
IntArrayList.cs (113) : Values = rematriz;
IntArrayList.cs (121) : for (int i = 0; i < NumElements; i++)
IntArrayList.cs (122) : {
IntArrayList.cs (123) : yield return i;
IntArrayList.cs (124) : }
IntList.cs (3) : using System.Windows.Markup;
IntList.cs (4) : using System.Xml;
IntList.cs (44) : IntListNode node = First;
IntList.cs (46) : int contador = 0;
IntList.cs (48) : {
IntList.cs (49) : node = node.Next;
IntList.cs (50) : contador++;
IntList.cs (52) : }
IntList.cs (54) : return contador;
IntList.cs (64) : IntListNode node = First;
IntList.cs (66) : while (contador < index && node != null )
IntList.cs (67) : {
IntList.cs (71) : }
IntList.cs (73) : if (node==null)
IntList.cs (74) : {
IntList.cs (76) : }
IntList.cs (86) : IntListNode node = First;
IntList.cs (118) : if (index < 0 || index >= Count())
IntList.cs (131) : while (node != null && contador < (index - 1))
IntList.cs (137) : if (node == null)
IntList.cs (139) : return -1;
IntList.cs (140) : }
